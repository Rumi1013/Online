{%- comment -%}
  MIDNIGHT MAGNOLIA THEME
  Cart Drawer Snippet - Sliding Cart Panel
{%- endcomment -%}

<cart-drawer class="drawer{% if cart == empty %} is-empty{% endif %}" id="CartDrawer">
  <div id="CartDrawer-Overlay" class="cart-drawer__overlay"></div>
  <div class="drawer__inner" role="dialog" aria-modal="true" aria-label="{{ 'sections.cart.title' | t }}" tabindex="-1">
    <div class="drawer__header">
      <h2 class="drawer__heading">{{ 'midnight_magnolia.cart.sacred_collection' | t }}</h2>
      <button class="drawer__close" type="button" onclick="this.closest('cart-drawer').close()" aria-label="{{ 'accessibility.close' | t }}">
        <span class="close-icon">‚úï</span>
      </button>
    </div>

    <cart-drawer-items class="drawer__contents js-contents">
      {%- if cart != empty -%}
        <div class="drawer__cart-items-wrapper">
          <div class="drawer__cart-items js-cart-items">
            {%- for item in cart.items -%}
              <div class="cart-item" id="CartDrawer-Item-{{ item.index | plus: 1 }}">
                <div class="cart-item__media">
                  {%- if item.image -%}
                    <img class="cart-item__image"
                         src="{{ item.image | image_url: width: 150 }}"
                         alt="{{ item.image.alt | default: item.product.title | escape }}"
                         loading="lazy"
                         width="150"
                         height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}">
                  {%- endif -%}
                </div>

                <div class="cart-item__details">
                  <h3 class="cart-item__name h4">
                    <a href="{{ item.url }}" class="cart-item__name">{{ item.product.title | escape }}</a>
                  </h3>

                  {%- if item.original_price != item.final_price -%}
                    <div class="cart-item__discounted-prices">
                      <span class="visually-hidden">
                        {{ 'products.product.price.regular_price' | t }}
                      </span>
                      <s class="cart-item__old-price product-option">
                        {{- item.original_price | money -}}
                      </s>
                      <span class="visually-hidden">
                        {{ 'products.product.price.sale_price' | t }}
                      </span>
                      <strong class="cart-item__final-price product-option">
                        {{ item.final_price | money }}
                      </strong>
                    </div>
                  {%- else -%}
                    <div class="product-option">
                      {{ item.original_price | money }}
                    </div>
                  {%- endif -%}

                  {%- if item.product.has_only_default_variant == false or item.properties.size != 0 or item.selling_plan_allocation != null -%}
                    <dl>
                      {%- if item.product.has_only_default_variant == false -%}
                        {%- for option in item.options_with_values -%}
                          <div class="product-option">
                            <dt>{{ option.name }}: </dt>
                            <dd>{{ option.value }}</dd>
                          </div>
                        {%- endfor -%}
                      {%- endif -%}

                      {%- for property in item.properties -%}
                        {%- assign property_first_char = property.first | slice: 0 -%}
                        {%- if property.last != blank and property_first_char != '_' -%}
                          <div class="product-option">
                            <dt>{{ property.first }}: </dt>
                            <dd>
                              {%- if property.last contains '/uploads/' -%}
                                <a href="{{ property.last }}" class="link" target="_blank">
                                  {{ property.last | split: '/' | last }}
                                </a>
                              {%- else -%}
                                {{ property.last }}
                              {%- endif -%}
                            </dd>
                          </div>
                        {%- endif -%}
                      {%- endfor -%}
                    </dl>

                    <p class="product-option">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                  {%- endif -%}

                  <div class="cart-item__quantity">
                    <div class="cart-item__quantity-wrapper">
                      <label class="visually-hidden" for="Drawer-quantity-{{ item.index | plus: 1 }}">
                        {{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}
                      </label>
                      <quantity-input class="quantity">
                        <button class="quantity__button no-js-hidden" name="minus" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.decrease' | t: product: item.product.title | escape }}</span>
                          -
                        </button>
                        <input class="quantity__input"
                               type="number"
                               name="updates[]"
                               value="{{ item.quantity }}"
                               min="0"
                               aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                               id="Drawer-quantity-{{ item.index | plus: 1 }}"
                               data-index="{{ item.index | plus: 1 }}">
                        <button class="quantity__button no-js-hidden" name="plus" type="button">
                          <span class="visually-hidden">{{ 'products.product.quantity.increase' | t: product: item.product.title | escape }}</span>
                          +
                        </button>
                      </quantity-input>

                      <cart-remove-button id="CartDrawer-Remove-{{ item.index | plus: 1 }}" data-index="{{ item.index | plus: 1 }}">
                        <button type="button" class="button button--tertiary" aria-label="{{ 'sections.cart.remove_title' | t: title: item.title }}">
                          <span class="remove-icon">üóëÔ∏è</span>
                        </button>
                      </cart-remove-button>
                    </div>
                    <div class="cart-item__error" id="CartDrawer-LineItemError-{{ item.index | plus: 1 }}" role="alert">
                      <small class="cart-item__error-text"></small>
                    </div>
                  </div>
                </div>
              </div>
            {%- endfor -%}
          </div>
        </div>
        <p class="visually-hidden" id="CartDrawer-LiveRegionText" aria-live="polite" role="status"></p>
        <p class="visually-hidden" id="CartDrawer-LineItemStatus" aria-live="polite" aria-hidden="true" role="status">{{ 'accessibility.loading' | t }}</p>
      {%- endif -%}
    </cart-drawer-items>

    <div class="drawer__footer">
      {%- if settings.show_cart_note -%}
        <details id="Details-CartDrawer">
          <summary>
            <span class="summary__title">
              {{ 'sections.cart.note' | t }}
              <span class="summary__icon summary__icon--caret">
                <span class="icon-caret">‚ñº</span>
              </span>
            </span>
          </summary>
          <cart-note class="cart__note field">
            <label class="visually-hidden" for="CartDrawer-Note">{{ 'sections.cart.note' | t }}</label>
            <textarea id="CartDrawer-Note" class="text-area text-area--resize-vertical field__input" name="note" placeholder="{{ 'sections.cart.note' | t }}">{{ cart.note }}</textarea>
          </cart-note>
        </details>
      {%- endif -%}

      <!-- Start of cart footer -->
      <div class="cart-drawer__footer" {{ block.shopify_attributes }}>
        <div class="totals">
          <h3 class="totals__subtotal">{{ 'sections.cart.subtotal' | t }}</h3>
          <p class="totals__subtotal-value">{{ cart.total_price | money_with_currency }}</p>
        </div>

        <div class="tax-note rte">
          {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
            {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
          {%- elsif cart.taxes_included -%}
            {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
          {%- elsif shop.shipping_policy.body != blank -%}
            {{ 'sections.cart.taxes_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
          {%- else -%}
            {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
          {%- endif -%}
        </div>

        <div class="cart__ctas" {{ block.shopify_attributes }}>
          <noscript>
            <button type="submit" class="cart__update-button button button--secondary" form="CartDrawer-Form">
              {{ 'sections.cart.update' | t }}
            </button>
          </noscript>

          <button type="submit" id="CartDrawer-Checkout" class="cart__checkout-button button" name="add" form="CartDrawer-Form"{% if cart == empty %} disabled{% endif %}>
            {{ 'midnight_magnolia.cart.complete_sacred_journey' | t }}
          </button>
        </div>
      </div>
    </div>
  </div>
</cart-drawer>

<script>
  class CartDrawer extends HTMLElement {
    constructor() {
      super();

      this.addEventListener('keyup', (evt) => evt.code === 'Escape' && this.close());
      this.querySelector('#CartDrawer-Overlay').addEventListener('click', this.close.bind(this));
      this.setHeaderCartIconAccessibility();
    }

    setHeaderCartIconAccessibility() {
      const cartLink = document.querySelector('#cart-icon-bubble');
      cartLink.setAttribute('role', 'button');
      cartLink.setAttribute('aria-haspopup', 'dialog');
      cartLink.addEventListener('click', (event) => {
        event.preventDefault();
        this.open(cartLink)
      });
      cartLink.addEventListener('keydown', (event) => {
        if (event.code.toUpperCase() === 'SPACE') {
          event.preventDefault();
          this.open(cartLink);
        }
      });
    }

    open(triggeredBy) {
      if (triggeredBy) this.setActiveElement(triggeredBy);
      const cartDrawerNote = this.querySelector('[id^="Details-"] summary');
      if (cartDrawerNote && !cartDrawerNote.hasAttribute('role')) this.setSummaryAccessibility(cartDrawerNote);
      // here the animation doesn't seem to always get triggered. A timeout seem to help
      setTimeout(() => {this.classList.add('animate', 'active')});

      this.addEventListener('transitionend', () => {
        const containerToTrapFocusOn = this.classList.contains('active') ? this.querySelector('.drawer__inner') : null;
        const focusElement = this.querySelector('.drawer__inner') || this.querySelector('.drawer__close');
        trapFocus(containerToTrapFocusOn, focusElement);
      }, { once: true });

      document.body.classList.add('overflow-hidden');
    }

    close() {
      this.classList.remove('active');
      removeTrapFocus(this.activeElement);
      document.body.classList.remove('overflow-hidden');
    }

    setSummaryAccessibility(cartDrawerNote) {
      cartDrawerNote.setAttribute('role', 'button');
      cartDrawerNote.setAttribute('aria-expanded', 'false');

      if(cartDrawerNote.nextElementSibling.getAttribute('id')) {
        cartDrawerNote.setAttribute('aria-controls', cartDrawerNote.nextElementSibling.id);
      }

      cartDrawerNote.addEventListener('click', (event) => {
        event.currentTarget.setAttribute('aria-expanded', !event.currentTarget.closest('details').hasAttribute('open'));
      });

      cartDrawerNote.parentElement.addEventListener('keyup', onKeyUpEscape);
    }

    renderContents(parsedState) {
      this.querySelector('.js-contents').innerHTML = parsedState.sections[this.getSectionInnerHTML(parsedState.sections, '.js-contents')];
      this.querySelector('.js-contents').classList.toggle('is-empty', parsedState.item_count === 0);
      this.querySelector('#CartDrawer-Checkout')?.toggleAttribute('disabled', parsedState.item_count === 0);
      this.querySelector('[data-cart-count]').textContent = parsedState.item_count;
    }

    getSectionInnerHTML(sections, selector) {
      return sections[Object.keys(sections).find(section => section.includes('cart-drawer'))];
    }

    setActiveElement(element) {
      this.activeElement = element;
    }
  }

  customElements.define('cart-drawer', CartDrawer);

  class CartDrawerItems extends CartItems {
    getSectionsToRender() {
      return [
        {
          id: 'CartDrawer',
          section: 'cart-drawer',
          selector: '.drawer__contents .js-contents',
        },
        {
          id: 'cart-icon-bubble',
          section: 'cart-icon-bubble',
          selector: '.shopify-section'
        }
      ];
    }
  }

  customElements.define('cart-drawer-items', CartDrawerItems);
</script>